# 
# !! IMPORTANT !!
# 
# If you wish to customize this plugin, edit the "config.yml" file instead.
# 
# DO NOT JUST COPY THIS WHOLE FILE INTO YOUR config.yml !!!!
# If you do this, updating the plugin in the future may not work as expected.
# 
# This file is merged from the files in the following folder:
# 
# https://github.com/elBukkit/MagicPlugin/tree/master/Magic/src/main/resources/defaults/config
# 
# 
# This turns on the survival configs by default.
# 
# Set
# example: ""
# in your config.yml to turn this off.
# 

example: survival

# This is used to convert a block to an item, for cases where
# the materials for each differ. (Example: skulls, doors)
block_items:
  skull: skull_item
  wall_banner: banner
  standing_banner: banner
  wooden-door: wood_door
  iron_door_block: iron_door
  wall_sign: sign
  sign_post: sign
  acacia_door: acacia_door_item
  jungle_door: jungle_door_item
  dark_oak_door: dark_oak_door_item
  birch_door: birch_door_item
  spruce_door: spruce_door_item
# These are player skins that represent blocks. Some are provided here
# as official Mojang skins, but more can be added.
block_skins:
  cactus: MHF_Cactus;
  chest: MHF_Chest;
  melon_block: MHF_Melon
  tnt: MHF_TNT # There is also MHF_TNT2 but we aren't using it now.
  log: MHF_OakLog
  pumpkin: MHF_Pumpkin

  # 1.13
  oak_log: MHF_OakLog

  # Other MHF blocks we don't use:
  # MHF_ArrowUp
  # MHF_ArrowDown
  # MHF_ArrowLeft
  # MHF_ArrowRight
  # MHF_Exclamation
  # MHF_Question
#
# Special materials used to represent icons in the material brush system
#

# Default disabled icon url. Set to "" to turn off disabled icons, or override on a per-spell basis.
disabled_icon_url: http://textures.minecraft.net/texture/1c28376acb23cd93322c0a5d569b48b7cd631a6d65dd4f226adb9e9dd7e5c

# Represents erase (fill with air)
erase_item: diamond_axe:1
erase_icon_url: http://textures.minecraft.net/texture/da486c55dfcb8d3f1e38e05ec924c7952811851869d9d92df236a313370ceb1
# Represents copy (fill with the target material)
copy_item: diamond_axe:2
copy_icon_url: http://textures.minecraft.net/texture/13e19c4f02f72d16191c1647c5e7cbd79974e642cd3458f553648632893cb9
# Clone will copy the area you are standing in when the clone material is activated
clone_item: diamond_axe:3
clone_icon_url: http://textures.minecraft.net/texture/b635f01b8b4cd9f44436154be3dd5d735e4487617089d3dadda39b4dada14
# Replicate works like clone, but will sample a moving area, allowing you to "paint"
# in a section of the world across multiple spell casts.
replicate_item: diamond_axe:4
replicate_icon_url: http://textures.minecraft.net/texture/f92839237f03534717246a81656961781a8a79e8f6497bcfd2894fb16ad14d
# The map material brush will fill in blocks from the last Map item you held. (Pixel art)
# It will use stained clay, wool or stained glass. The default is stained clay, but it will
# use one of the other types if it was the last material on your brush.
map_item: diamond_axe:5
map_icon_url: http://textures.minecraft.net/texture/c36adcbe21b520b7355936c89cd2b335ca5318e68173eaaa82e62f5fb986
# The schematic material brush can be used (if WorldEdit is present) to construct with
# schematic files
schematic_item: diamond_axe:6
schematic_icon_url: http://textures.minecraft.net/texture/6eb68dc909b12ef5fb397c23fdecbc416d9a76825170c106b1faeb97b4749
# This icon will be used for any material that fails to create as an item
default_brush_item: diamond_axe:7
default_brush_icon_url: http://textures.minecraft.net/texture/5163dafac1d91a8c91db576caac784336791a6e18d8f7f62778fc47bf146b6

# Use this for block types that Minecraft won't allow in an inventory (lava, water)
# or for blocks that have been replaced in the resource pack (monster eggs)
brush_replacements:
  lava: lava_bucket
  stationary_lava: lava_bucket
  water: water_bucket
  stationary_water: water_bucket
  monster_eggs|0: stone
  monster_eggs|1: cobblestone
  monster_eggs|2: smooth_brick
  monster_eggs|3: smooth_brick:1
  monster_eggs|4: smooth_brick:2
  monster_eggs|5: smooth_brick:3
  fire: flint_and_steel
  flower_pot: flower_pot_item
  iron_door_block: iron_door
  wooden_door: wood_door
  spruce_door: spruce_door_item
  birch_door: birch_door_item
  acacia_door: acacia_door_item
  jungle_door: jungle_door_item
  dark_oak_door: dark_oak_door_item
  carrot: carrot_item
  potato: potato_item

#
# Here you can specify custom damage types.
# There are several builtin damage types that correspond to vanilla damage sources. You can add your own types, for
# use in protection and damage bonuses, and by the Damage action damage_type parameter.
#
# For each damage type you can specify a max reduction % allowed. This is by how much damage is reduced for a player
# that has maxed out protection for that source.
#
# You can also specify max_strength- this is the damage multiplier that an attacker will receive if they have a "strength"
# of 1.
#
# And max_weakness is the damage multiplier that a defender will receive if they have a "weakness" of 1.
#
# For instance, if you have fire damage set to max_reduction of 0.5, a player with a protection.fire of 1.0 (100%, maxed out)
# will take 50% damage from all fire sources. A player with protection.fire of 0.5 will take 25% damage.
#
# Protection will never be allowed to go above 100% of the values specified here. Even if using stacking items, if a player
# has armor with protection.fire of 0.7 and holding a wand with protection.fire of 0.5, they will stack but cap at 1.0
#
# However, "overall" protection does stack with the other amounts, so take care with that. If the protection values
# add up to over 1.0 the player is completely immune to that type of damage.
#
# The "overall" type is special, it applies to the "overall" protection which will be used for any type of damage.
#
damage_types:
  overall:
    max_reduction: 0.2
    max_strength: 5
    max_weakness: 10
  explosion:
    max_reduction: 0.2
    max_strength: 5
    max_weakness: 10
  fall:
    max_reduction: 1.0
    max_strength: 5
    max_weakness: 10
  fire:
    max_reduction: 0.5
    max_strength: 5
    max_weakness: 10
  physical:
    max_reduction: 0.6
    max_strength: 5
    max_weakness: 10
  projectile:
    max_reduction: 0.2
    max_strength: 5
    max_weakness: 10
  magic:
    max_reduction: 0.5
    max_strength: 5
    max_weakness: 10
# This can be used to turn off loading all of the default configs
# This is the same as setting all of the following "load_default_*" to false.
load_default_configs: true

# Set to false to skip loading defaults/spells.defaults.yml entirely.
# Use this if you want a completely customized configuration.
# You will only have your custom spells, and will not get any new spells when you update.
# You will need to do the same with wands, since they refer to the default spells.
load_default_spells: true

# Use this to load, but disable the default spells.
# This is useful if you want to inherit from the defaults, or choose what to expose.
disable_default_spells: false

# Set to false to skip loading defaults/wands.defaults.yml entirely.
# Use this to have completely custom wands, and avoid getting updates to wands
# in the future.
load_default_wands: true

# Use this to load, but disable the default wands.
# This is useful if you want to inherit from the defaults, or choose what to expose.
disable_default_wands: false

# Set to false to skip loading defaults/paths.defaults.yml entirely.
load_default_paths: true

# Set to false to skip loading defaults/classes.defaults.yml entirely.
load_default_classes: true

# Set to false to skip loading defaults/attributes.defaults.yml entirely.
load_default_attributes: true

# Set to false to skip loading defaults/crafting.defaults.yml entirely.
load_default_crafting: true

# Set to false to skip loading defaults/mobs.defaults.yml entirely.
load_default_mobs: true

# Set to false to skip loading defaults/items.defaults.yml entirely.
load_default_items: true

# Set to false to skip loading defaults/automata.defaults.yml entirely.
load_default_automata: true

# Set to false to skip loading defaults/effects.defaults.yml entirely.
load_default_effects: true

# A class to use with the /mage command when a player doesn't yet have a class assigned
# default_mage_class: mage
default_mage_class: ""

# Give new players a wand when they join.
# e.g. welcome_wand: wand
welcome_wand: ""

# Whether or not to show any messages (in chat)
show_messages: true

# Whether or not to show messages on every spell cast (in chat)
show_cast_messages: true

# Changes log verbosity- set to a higher number (like 10) if you're having issues
# with Magic, the extra log info may help me find problems.
log_verbosity: 0

# Prevent rapid sending of chat messages from the plugin (in milliseconds)
message_throttle: 500

# A prefix to use for any important messages
message_prefix: "&d&o"

# A prefix to use for cast messages
# This and the above (and any message in messages.yml) support two special prefixes:
# a: send as an action bar message
# t: send as a title (with default fade in/out timing)
cast_message_prefix: "a:&5&o"

# Enable/Disable Sound Effects
sounds: true

# Whether wands can be crafted on a crafting table
enable_crafting: true

# NOTE: If you disable spell upgrades, you probably also want to nerf magic missile's SP
# earn rate, assuming you still have that spell enabled. Add this to spells.yml (not commented out)
# missile:
#   earns_cooldown: 900000

# Enable spell upgrades. Turning this off will make all of the upgraded spells
# unobtainable.
enable_spell_upgrades: true

# Enable spell progression. Turning this off will make any spells with progress
# levels always function as if their progress level is 1
enable_spell_progression: true

# Automatically upgrades spells based on cast count
enable_automatic_spell_upgrades: true

# Automatically upgrade wand paths when a spell upgrades or progresses
enable_automatic_path_upgrades: true

# Set this to 1 to just turn costs off, or you can use it to scale costs down.
cost_reduction: 0.0

# Disabling cooldowns is not a great idea. I generally only put cooldowns on spells
# that can hurt the server via spamming- as in by creating too many entities or explosions.
cooldown_reduction: 0.0

# Whether or not to respect cooldowns and costs when casting from the console or command blocks.

# By default console and command block casting skips costs but still respects cooldowns.

# From a command block
cast_command_cost_free: true
cast_command_cooldown_free: false

# From NPCs, /cast commands or other console-routed places
cast_console_cost_free: true
cast_console_cooldown_free: false

# Whether or not to respect wand power for the held wand when using /cast
# Set the to 1.0 to use normal wand power, 0.0 to ignore wand power.
cast_command_power_multiplier: 0.0
cast_console_power_multiplier: 0.0

# Set this to 0 to disable BStats metrics collection
metrics_level: 5

# Set this to a non-zero value to remove common ground items more quickly.
#
# This value is in milliseconds, for consistency with other Magic duration values.
# The default live time is 6000 ticks, which is 300000ms.  (300 seconds, 5 minutes)
# So to make items lived for only a second, use 299000.
# To make items live for 1 minute, use 240000. (300000 - 60 * 1000)
# Mathmatical!
#
age_dropped_items: 0

#
# Wand configuration
#

#
# Wand data key
# WARNING - changing this will cause all wands to deactivate permanently.
#
# This controls the root NBT tag used to store wand data on items.
#
wand_key: "wand"
wand_upgrade_key: "wand_upgrade"

#
# Wand destruction key
# This can be used to cause old wands to self-destruct.
#
# If changing the above intentionally to "reset Magic", you way
# also want to change this to "wand" to cause all of the old reset
# wands to self-destruct, rather than staying around as inert items.
#
# They will self-destruct when held, with a configurable message (see messages.yml, wand.self_destruct)
#
wand_self_destruct_key: ""

# Wand appearance, used when no icon is specified in a wand template config
wand_item: wood_hoe
wand_upgrade_item: stick

# Wand FX locations, change to move from where spell casts appear to originate
wand_location_offset: 0.5
wand_location_offset_vertical: 0

# Set this to true to make wands "Unbreakable", regardless of the indestructible property
wand_unbreakable: false

# Set this to false to allow players to put wands in chests.
# The Magic.wand.override_stash permission also allows players to override this setting.
# Wands are droppable and stashable normally unless they are set to "undroppable: true"
# The "unstashable" property can also be set per-wand instead of using this global setting.
wand_unstashable: false

# Skill configuration
default_skill_icon: stick
default_spell_icon: eye_of_ender
skill_inventory_max_rows: 6
mskills_spell: skills

# Control word-wrapping in various lore texts
lore_wrap_limit: 32

# This will hide all flags on a wand.
# If you want enchantments to show, use
# wand_hide_flags: 62
# See: http://minecraft.gamepedia.com/Tutorials/Command_NBT_Tags
wand_hide_flags: 63

# Set this to true to turn on material brush glow.
brush_glow: false
brush_item_glow: true

# Set this to true to turn on spell glow. This will apply a hidden luck enchantment to spells.
spell_glow: false

# Set this to have the hotbar show what spells are castable
live_hotbar: true

# Set this to use item amounts as a cooldown countdown timer
live_hotbar_cooldown: true

# Set this to false to turn off cooldown timers on skills
# This involves scanning players' hotbars all the time, even
# when not holding an active wand.
# There may be a performance hit to this, but hopefully not much. If you
# don't use Heroes integration, the skill selector or spell book you can turn this off.
live_hotbar_skills: true

# Turn this off if you want to use Command actions that do damage
# Magic will normally block this, preventing melee damage from wands and
# allow spells casts from an entity hit (without potentially going into
# an infinite loop of damage+cast)
prevent_wand_melee_damage: true

# Turn this on if you don't want players to be able to deal damage
# other than with a wand, or items listed in the "melee" list in materials.yml
# By default, swords are still allowed.
# Has no effect if prevent_wand_melee_damage is set to false
prevent_melee_damage: false

# A value above 0 here will reduce melee damage from any weapon globally.
# A value of 1 or higher will completely disable all melee damage.
melee_damage_reduction: 0

# You can make a map here of entity (including projectiles) damage reduction by type.
# Same as above, this is a percentage, 1 will disable damage from that source completely.
# entity_damage_reduction:
#   arrow: 0.5

# Set this to false to allow block-breaking with a wand
cancel_interact_on_left_click: true

# Set this to true if something went weird with wand right-clicks
cancel_interact_on_right_click: false

# Set this to false to disallow casting using an offhand wand
allow_offhand_casting: true

# Set this to false to prevent casting a spell from an inventory using the drop button
allow_inventory_casting: true

# Set this to false to prevent selecting a spell from an inventory using right-click
allow_inventory_selection: true

# Set this to specify the time interval in ms that must pass between offhand casts
# this is meant to throttle the spammy behavior that happens if you hold right-click with an offhand wand
offhand_cast_cooldown: 500

# This is here to work around an MC bug which causes multiple equip events to fire when changing worlds
# Which can cause some unintended effects like changing spells or brushes when a wand inventory is open.
change_world_equip_cooldown: 1000

# This can be used to fix compatibility with PerWorldInventory or other plugins that store players'
# inventories on world change.
# This makes sure wands close their inventory before players change worlds.
close_wand_on_world_change: false

# Turn this off to use normal damage. May be useful if you want
# direct damage spells to effect armor.
# This is incompatible with prevent_melee_damage: true!
use_magic_damage: true

wand_inventory_open_sound: magic.wandup,1,1
wand_inventory_cycle_sound: magic.paperturn,1,1
wand_inventory_close_sound: magic.wanddown,1,1
wand_no_action_sound: note_bass,1.0,0.7
wand_pickup_item_sound: entity_item_pickup,1,1

# If true, fill wands with all known spells on creation, and on every activation
fill_wands: false

# Max fill level to fill wands to
# 0 means put the max level of each spell on the wand,
# 1 would be only the level 1 versions
fill_wand_level: 0

# Set this to true to only fill wands with spells created by the player
# Useful in sandbox configs
fill_wand_creator: false

# Players can remove spells from their wands
allow_spell_dropping: false

# Prefer alternate modes for wand mechanics.
# Possible vales are:
# "none" : Does nothing, has no spell inventory
# "inventory" : The default, toggles the wand inventory in/out of your player inventory
# "chest" : Bring up a Wand inventory on right-click.
# "cycle" : Right-click will cycle to the next active spell (no inventory or icons)
default_wand_mode: none
# Options for brush mode are inventory and chest
# In inventory mode, brushes appear along with spells
# in Chest mode, shift+right-click to select a brush
default_brush_mode: chest
# The spell to cast on shift+right-click
brush_select_spell: brushselect
# This will make hitting the drop button over a wand while open change pages instead of
# cycling the hotbar
drop_changes_pages: false

# When wands are in "inventory" mode, players' inventories will be backed up
# so that if the server crashes it is not lost.
# You can turn this feature off by setting this to false.
backup_player_inventory: true

# The default wand, given when using "/wand"
default_wand: wand

# How to display Mana. Options are "bar", "number", "durability", "glow" and "none"
mana_display: bar

# How to display SP. Options are "number" and "none"
sp_display: number

# Set this to false to disable the Skill Point system completely.
sp_enabled: true

# Set this to false so players do not naturally earn Spell Points
sp_earn_enabled: true

# How to display SP items
sp_items_enabled: true
sp_item_icon_url: http://textures.minecraft.net/texture/ce6ed0a5f7e23bc3d34d73baa0b9c3f838e85014d2ff290801dc7486dd4da6

# Cap SP- mainly so the UI doesn't get broken. 0 to disable and allow unlimited SP.
sp_max: 9999

# The amount of SP that new players start with
sp_default: 0

# This controls what players will see when interacting with an enchantment table
# These spells must exit in your configuration for this to work, and "enchant_block" needs to be set.
# enchant_click: progressmenu
# enchant_sneak_click: spellshop
enchant_click: ""
enchant_sneak_click: ""

# This can be used to set up a progression system based on clicking an enchant table with your wand.
# enchant_block: enchantment_table
enchant_block: ""

# The default cast location if not holding a wand. Options are "mainhand", "offhand" and "eyes"
default_cast_location: mainhand
# This offsets left or right from the center of the body
default_cast_location_offset: 0.5
# This offsets from the eyes, the result should be around the main hand location
default_cast_location_offset_vertical: -0.6
# How much we should lower down the cast location when a player is sneaking
sneaking_cast_location_offset_vertical: -0.15

# Control whether wands regenerate mana while they are not being held
regenerate_while_inactive: true

# A cooldown value in milliseconds between clicks. Mainly used to prevent Bukkit/MC double-event bugs.
click_cooldown: 150

# A cooldown preventing players from opening wands after opening a container
# This is used to combat lag-related exploits when opening a chest, and quickly opening a wand inventory, allowing
# players to put their spells in a chest.
open_cooldown: 500

# Auto-save interval in milliseconds (default is one hour, 0 to disable)
auto_save: 3600000

# Can be used to turn off saving player data entirely
save_player_data: true

# If player data saving is off, you can use this to still have mages expect their data to load
external_player_data: false

# Use this to provide your own mechanism for saving player data.
# More built-in options may be available in the future.
player_data_store:
  class: com.elmakers.mine.bukkit.data.YamlMageDataStore
  folder: data/players

# Whether or not allow players breaking locked containers they don't own
protect_locked: true

# Visible particle max range
# Decrease this if you find you have client or server performance issues
# Related to particle range
particle_range: 48

# How many casts to track in the undo queue
undo_depth: 128

# How many pending spells a player may have at one time
pending_depth: 64

# What entity types to always undo when auto-undoing a spell.
# A spell that is countered or manually undone will undo all entity types.
entity_undo_types:
- item_frame
- painting
- fireball
- small_fireball
- wither_skull
- arrow
- snowball
- egg
- firework
- primed_tnt
- falling_block
- armor_stand
- dropped_item

# This can be used to enable auto-rollback for natural explosions
# from creepers, fireballs, TNT or other entities.
# Change the duration to a positive number (time to undo in ms) to enable this feature.
auto_rollback_duration: 0
auto_rollback_speed: 0.5
auto_rollback_explosions:
- creeper

# The largest thing we'll persist in the undo queue (to a file)
# This is specifically large enough to hold a Wolf House cast
# But most likely not a Wolf House self-destruct, or anything using overpowered Architect spells.
undo_max_persist_size: 65536

# How often to process batched spells.
# Anything higher than "1" in here may cause noticable delays for
# engineering spells, and in particular affect some blockchange-based PvP
# spells in a negative way
# If you want to tune down the amount of work Magic does, it is better
# to start with work_per_update below.
# Units of work are roughly defined as:
# 1 - Inspecting a block or other trivial action
# 5 - Modifying an entity
# 10 - Making block changes
work_frequency: 1

# How many units of work to perform per the interval defined above
work_per_update: 5000

# How often to "tick" a Mage. By default this is 4x per second
# This effects visual fill rate of XP, and visual/potion effects
# This value is in ticks
mage_update_frequency: 5

# How often to "tick" an Automaton, which is a virtual block that
# can cast spells, spawn mobs or produce effects.
# Decreasing this value may introduce some lag (though probably not)
automata_update_frequency: 10

# How long to exempt players from flight checks for each tick that
# they have a jump potion effect
# Set to 0 to disable exemption
jump_exemption: 5000

# How often to check for scheduled undo batches. Changing this will
# make the scheduled undo times less accurate, though they will
# always occur in the correct order
undo_frequency: 10

# Auto-commit player undo data when they logout.
# Enabling this can save memory, but it means you won't be able to Rollback
# or Rewind a player's constructions after they log out.
commit_on_quit: false

# Enable this to persists Mage data on mobs.
# This can generate quite a lot of save data if you have randomly spawning
# Mages, but it would also let you undo their spells after a restart.
save_non_player_mages: false

# Force any pending scheduled undo tasks to run on world save
# this will ensure the world reverts to normal in the event of
# a server crash.
undo_on_world_save: true

# When redstone is toggled, what block should replace? Note that air is glitchy
redstone_replacement: obsidian

#
# Control wands' "Power" settings
#
# Wands have a power (from 0-1) that will change the effects of many spells:
# - Direct-damage spells (arrow, disintegrate, shrink) will increase their damage
# - "Super" construction spells (the two-click variants) will allow for larger dimension selections
# - Radius-based spells (inferno, storm, blob, blast, arrowrain, mob) will have a larger radius,
#   generally meaning "more" of whatever they do. Be careful with this one.
# - Additionally, all spells will have a longer range.
# All of these aspects can be controlled individually.
# Be aware that a wand can be "overclocked", meaning it has a power greater than 1. Spell properties
# will continue to scale up. This will never happen naturally, only via the "wand configure" command
# or a wand template with a pre-defined power greater than 1
#
# There are hard max limits defined for range and radius for this reason.
#
max_power_damage_multiplier: 2.0
max_power_construction_multiplier: 3.0
max_power_radius_multiplier: 1.5
max_power_radius_multiplier_max: 2.0
max_power_range_multiplier: 2.0
max_power_range_multiplier_max: 5.0
max_power: 100.0
max_cost_reduction: 0.5
max_cooldown_reduction: 0.75

# These are used only for "Roman" display mode for mana on wand lore
max_mana: 1000
max_mana_regeneration: 100

# Debug EffectLib issues
debug_effects: false

# use this to make all hitboxes larger or smaller
# for targeting purposes.
# I find the vanilla ones all felt a little small, though I'm not sure why.
hitbox_scale: 1.75
hitbox_scale_y: 1.2
hitbox_sneaking_scale_y: 0.75

# This defines head radius in blocks, for entities that can have headshots
head_sizes:
  player: 0.2
  villager: 0.2
  skeleton: 0.2
  husk: 0.2
  zombie: 0.2
  vindicator: 0.2
  illusioner: 0.2
  evoker: 0.2
  enderman: 0.2
  giant: 4
  pig_zombie: 0.2
  blaze: 0.2
  creeper: 0.2
  witch: 0.2
  snowman: 0.2
  iron_golem: 0.2

# Entity-specific hitboxes for targeting purposes
# Magic uses the vanilla hitboxes by default, but you
# can override that per-entity here.
hitboxes:
   default: 1,1.6,1
#   player: 1.5,2,1.5
#   spider: 2, 1, 2
#   chicken: 1, 1, 1
#   rabbit: 1, 1, 1
#   silverfish: 1, 1, 1
#   bat: 1, 1, 1
#   slime: 2, 2, 2
#   magma_cube: 2, 2, 2
#   enderman: 1.5,3,1.5
#   ghast: 4,4,4
#   wither: 4,4,4
#   giant: 6,13,6
#   pig: 1.25, 1.25, 1.25
#   sheep: 1.25, 1.25, 1.25
#   cow: 1.5, 1.5, 1.5


# Some spells, like teleport and velocity based spells, will not function above max world height
# These can be configured per world type (nether, normal, the_end)
# The nether is here so we can specify the "roof" of the nether, which is 1/2 the actual world height
max_height:
  nether: 127

# This can be used to disable map animations. Best to just not give /mmap to people you don't trust, though.
enable_map_animations: true

# The maximum velocity we are allowed to apply to an entity
# If you're using Paper you may need to change this to 4.
max_velocity: 10

# Commands like /mgive and /wand will bind wands to players
bind_on_give: false

# This can be used for a server that is hooked up with a live editor
# The editor will update Magic/data/updated.yml, and the server will automatically
# reload configurations when the configs have changed.
config_update_interval: 0

# This can be used to restrict the use of certain actions.
# Mainly intended for the sandbox configs.
restricted_spell_actions: []

# Set this to false to not drop any blocks if breaking a block that was magically modified
drop_original_block: true
## Work-in-Progress or not-fully-functional options

# Whether or not to show (or broadcast) cast messages as holotext
# (This feature was WIP and never really worked)
show_cast_holotext: false
cast_holotext_range: 0

# Whether or not to show (or broadcast) spell activate holotext
# (This feature was WIP and never really worked)
show_activate_holotext: false
activate_holotext_range: 0

## Deprecated configuration options

# These hacks should not be required in 1.8 and up
# This enables the item drag event interceptor
enable_custom_item_hacks: false

# Used as a work-around for enchanting since the main item may not be enchantable (client-side).
# wand_item_enchantable: wood_sword
wand_item_enchantable:

# If set to non-zero, represents a time (in milliseconds) after which all spells will be reversed.
auto_undo: 0

# Throttle TNT explosions
# This is built-in to Spigot, so generally not needed here.
max_tnt_per_chunk: 0

# The default enchanting path.
# Paths should be defined per-wand, though this could be used to "update" old wands with no
# path to some specific path.
default_wand_path:

# Set this to false to not write default configs out to the defaults folder.
save_default_configs: true

# Whether wands can be upgraded on an enchanting table
# This does not affect spellshop-based progression, but rather wands being enchanted via vanilla
# mechanics, something that no longer works.
enable_enchanting: false

# Whether wands can be combined on an anvil
enable_combining: false

# Whether renaming on an anvil will also clear the description
# In the future, it may be possible to change the description on
# an anvil.
anvil_rename_clears_description: false

# Whether or not using a wand on an anvil will organize its inventory
enable_organizing: false

# Players keep their wands when they die
# This is better confrolled via the "keep" property on wand configs.
keep_wands_on_death: false
### Economy Helpers

# These values are used to help create a balanced economy if you plan on selling wands, spells, or upgrades.
# Currently they are only visible on the Magic website, though I plan to incorporate them into the plugin in the near future.
# This will probably appear in the form of a "/magic sell <item>" command. This would work just like "/magic give <item>"
# except it would also give you the "worth" of the item as defined by your economy.

# This may be a simple chat message for balance-based economies (e.g. MSRP: $1,000), or it may
# give you physical items for an item-based economy. See the "worth_items" section below.

# The following modifiers affect wand pricing.
# A wand's price is calculated using the sum of the prices of all of its spells as a base.
# Wand properties  (mana, protection, etc) may also add value.
# Each of these values is multiplied by the wand property. Keep in mind that most properties naturally scale
# from 0-1, with some exceptions like mana regeneration and limits. Refer to the maximums set above (e.g. max_mana)
# for a good idea of how those values are going to scale.

# These numbers may look a little screwy,
# I was going for a base-2 kind of thing to hopefully make
# costs fall along even item stack limits. (64)

worth_use_multiplier: 0.125
worth_mana: 1
worth_mana_max: 100
worth_mana_regeneration: 800
worth_damage_reduction: 10000
worth_damage_reduction_explosions: 7000
worth_damage_reduction_falling: 3000
worth_damage_reduction_fire: 5000
worth_damage_reduction_physical: 5000
worth_damage_reduction_projectiles: 6000
worth_cost_reduction: 100000
worth_cooldown_reduction: 100000

# A wand may have additional value for each brush it contains
# Brushes are currently not able to have specific values, though this may be a future addition.
# Some brushes, like copy and clone, are tremendously more powerful than others, like dirt, and hence
# should be more valuable.
worth_brush: 32

# The following are added in if the wand has the specific property at all, they do not scale.
worth_effect_color: 2
worth_effect_particle: 4
worth_effect_sound: 8

# This will be used as a base multiplier for all values. Once spells and wand properties are balanced relative
# to each other (which will hopefully be the default...) you can use this to scale the overall worth of Magic
# items relative to the rest of your economy.
#
# If you have a default Gringott's install, you may want to change this to "0.01" to make the emeralds
# match up.
worth_base: 1

# This is how much Spell Points are worth, relative to virtual currency.
worth_sp: 1

# If using XP as a currency, how much one XP is worth
worth_xp: 1

# By default the Magic ecnonomy is balanced towards a typical Vault economy
# If Vault is not present, Magic falls back to a physical, emerald-based ecnonomy.
# For balancing purposes, an emerald will be considered worth 100 "vault dollars" by default.
# This scales all of the prices down when using emeralds.
#
# Adjust the "worth" value below to scale an item-based economy up or down. A value of 1 will make
# emerald costs match configured worth/cost values.
currency:
  emerald:
    worth: 100
    name: Emerald
    name_plural: Emeralds

# Here you can define custom currencies
# These can be named in the "currency" section of messages.yml, see the potter example configs for details.
custom_currency: {}
### Plugin Integration

# Add Magic NPC trait (/trait magic) to Citizens
enable_citizens: true

# Allow wands to be purchased on Essentials' signs, if present.
enable_essentials_signs: true

# Allow integration with LibsDisguises, spells can be restricted if disguised
enable_libsdisguises: true

# Update dynmap when constructing, if dynmap is present.
dynmap_update: true

# Show wands as dynmap markers, if dynmap is present
dynmap_show_wands: true

# Show spell casts as dynmap polylines, if dynmap is present
dynmap_show_spells: true

# Only show spell casts from players
dynmap_only_player_spells: false

# Enable worldguard protection against construction spells, and PVP
region_manager_enabled: true

# Enable Factions protection against construction spells
factions_enabled: true

# Enable PvPManager integration for PVP spells
pvp_manager_enabled: true

# Enable Towny integration for Build checks
towny_enabled: true

# All spells are allowed in the wilderness
towny_wilderness_bypass: true

# Enable GriefPrevention integration for Build checks
grief_prevention_enabled: true

# Enable PreciousStones integration for Build and PVP checks
precious_stones_enabled: true
# Players who can build in a field can cast ANY spell in that field,
# regardless of other region perms
precious_stones_override: true

# Enable NCP integration- set to false to disable Magic adding
# exemptions to players when casting spells. (e.g. survival_fly on brooms)
ncp_enabled: true

# Enable Lockette integration for Build checks
lockette_enabled: true

# Enable MVCore integration for PVP checks
multiverse_enabled: true

# Disable all build-related checks
bypass_build: false

# Disable all block-breaking checks
bypass_break: false

# Disable all pvp-related checks
bypass_pvp: false

# Set to "true" to ignore pvp_restricted on any spells
allow_pvp_restricted: false

# Will consider all spells as pvp spells
pvp_restricted: false

# Use scoreboard teams for friendly fire
# This will prevent players on the same scoreboard team from
# targeting each other with spells.
use_scoreboard_teams: false

# If not using scoreboard teams or Heroes parties, should players be "friends" by default?
# This will affect being able to cast healing or other perk type spells on other players.
# This does not affect targeting with normal (damaging, etc) spells.
default_friendly: true

# Which mobs types should be considered friendly by default.
# these mobs can still be targeted by damaging spells, but they can also be targeted by friendly healing or perk spells.
friendly_entity_types:
- chicken
- cow
- donkey
- villager
- horse
- iron_golem
- llama
- mule
- ocelot
- parrot
- pig
- polar_bear
- rabbit
- sheep
- snowman
- wolf

### Heroes/Skills configuration

# Show Heroes skills in the /mskills menu, if Heroes is present
skills_use_heroes: true

# Use Heroes mana, if Heroes is present
use_heroes_mana: true

# Spells that don't bypass friendly fire will check Heroes' parties
use_heroes_parties: true

# Use this to prefix skills added via the Magic skill pack
# This can be used to avoid conflicts with public or other skills
heroes_skill_prefix: ""

# Show all Magic spells the player has permission to cast in the /mskills menu
# This might make opening the skills menu lag if you have a lot of spells.
skills_use_permissions: false

### SkillAPI configuration
skillapi_enabled: true

# Use Skill API mana, if Skill API is present
use_skillapi_mana: false

# Allow magic placeholders in PlacerHolder API
placeholder_api_enabled: true

# Enable the Light action using Light API
light_api_enabled: true

# MobArena integration
mobarena:
  # Use this to disable all MobArena integration
  enabled: true
  # Set this to true for magic build/break permissions to respect protected arenas
  protect: false
  # This can be used to protect specific arenas by name
  # protected:
  # - arena1
  # - arena2

# Skript integration will add cast events and effect
skript_enabled: true

# Citadel integration
citadel:
  # Set to false to disable Citadel integration
  enabled: true

  # Non-player reinforcements will be indestructible to spells
  reinforcements_indestructible: false

  # Player reinforcements will be indestructible to spells
  player_reinforcements_indestructible: false

  # Reinforcements will be taken into account in the BreakBlock action
  # Spells that use ModifyBlock to directly erase blocks will still be able to destroy
  # reinforced blocks, unless the above flags are set.
  reinforcement_durability: true

# The folder and file path to use for loading schematics. This will be relative to
# The server's /plugins folder.
# You can use WorldEdit's schematics folder for easy access to saved schematics.
# You can use this folder to override the built-in schematics, such as replacing the schematics
# used for Tent or Cage.
schematic_files: WorldEdit/schematics/
# This is a color map of blocks that can be used for colorizing construction.
# It is primary used by the map brush, to create blocks based on a map item.
# It may also be used for coloring blocks to match a player's custom color,
# such as with the blob, reflect, shell and platform spells.
material_colors:
- white: concrete:0
  orange: concrete:1
  magenta: concrete:2
  light_blue: concrete:3
  yellow: concrete:4
  lime: concrete:5
  pink: concrete:6
  gray: concrete:7
  silver: concrete:8
  cyan: concrete:9
  purple: concrete:10
  blue: concrete:11
  brown: concrete:12
  green: concrete:13
  red: concrete:14
  black: concrete:15
- white: concrete_powder:0
  orange: concrete_powder:1
  magenta: concrete_powder:2
  light_blue: concrete_powder:3
  yellow: concrete_powder:4
  lime: concrete_powder:5
  pink: concrete_powder:6
  gray: concrete_powder:7
  silver: concrete_powder:8
  cyan: concrete_powder:9
  purple: concrete_powder:10
  blue: concrete_powder:11
  brown: concrete_powder:12
  green: concrete_powder:13
  red: concrete_powder:14
  black: concrete_powder:15
- white: white_glazed_terracotta
  orange: orange_glazed_terracotta
  magenta: magenta_glazed_terracotta
  light_blue: light_blue_glazed_terracotta
  yellow: yellow_glazed_terracotta
  lime: lime_glazed_terracotta
  pink: pink_glazed_terracotta
  gray: gray_glazed_terracotta
  silver: silver_glazed_terracotta
  cyan: cyan_glazed_terracotta
  purple: purple_glazed_terracotta
  blue: blue_glazed_terracotta
  brown: brown_glazed_terracotta
  green: green_glazed_terracotta
  red: red_glazed_terracotta
  black: black_glazed_terracotta
- white: stained_clay:0
  orange: stained_clay:1
  magenta: stained_clay:2
  light_blue: stained_clay:3
  yellow: stained_clay:4
  lime: stained_clay:5
  pink: stained_clay:6
  gray: stained_clay:7
  silver: stained_clay:8
  cyan: stained_clay:9
  purple: stained_clay:10
  blue: stained_clay:11
  brown: stained_clay:12
  green: stained_clay:13
  red: stained_clay:14
  black: stained_clay:15
- white: wool:0
  orange: wool:1
  magenta: wool:2
  light_blue: wool:3
  yellow: wool:4
  lime: wool:5
  pink: wool:6
  gray: wool:7
  silver: wool:8
  cyan: wool:9
  purple: wool:10
  blue: wool:11
  brown: wool:12
  green: wool:13
  red: wool:14
  black: wool:15
- white: carpet:0
  orange: carpet:1
  magenta: carpet:2
  light_blue: carpet:3
  yellow: carpet:4
  lime: carpet:5
  pink: carpet:6
  gray: carpet:7
  silver: carpet:8
  cyan: carpet:9
  purple: carpet:10
  blue: carpet:11
  brown: carpet:12
  green: carpet:13
  red: carpet:14
  black: carpet:15
- white: stained_glass:0
  orange: stained_glass:1
  magenta: stained_glass:2
  light_blue: stained_glass:3
  yellow: stained_glass:4
  lime: stained_glass:5
  pink: stained_glass:6
  gray: stained_glass:7
  silver: stained_glass:8
  cyan: stained_glass:9
  purple: stained_glass:10
  blue: stained_glass:11
  brown: stained_glass:12
  green: stained_glass:13
  red: stained_glass:14
  black: stained_glass:15
- white: stained_glass_pane:0
  orange: stained_glass_pane:1
  magenta: stained_glass_pane:2
  light_blue: stained_glass_pane:3
  yellow: stained_glass_pane:4
  lime: stained_glass_pane:5
  pink: stained_glass_pane:6
  gray: stained_glass_pane:7
  silver: stained_glass_pane:8
  cyan: stained_glass_pane:9
  purple: stained_glass_pane:10
  blue: stained_glass_pane:11
  brown: stained_glass_pane:12
  green: stained_glass_pane:13
  red: stained_glass_pane:14
  black: stained_glass_pane:15
- white: white_shulker_box
  orange: orange_shulker_box
  magenta: magenta_shulker_box
  light_blue: light_blue_shulker_box
  yellow: yellow_shulker_box
  lime: lime_shulker_box
  pink: pink_shulker_box
  gray: gray_shulker_box
  silver: silver_shulker_box
  cyan: cyan_shulker_box
  purple: purple_shulker_box
  blue: blue_shulker_box
  brown: brown_shulker_box
  green: green_shulker_box
  red: red_shulker_box
  black: black_shulker_box

# 1.13

- white: white_concrete
  orange: orange_concrete
  magenta: magenta_concrete
  light_blue: light_blue_concrete
  yellow: yellow_concrete
  lime: lime_concrete
  pink: pink_concrete
  gray: gray_concrete
  silver: light_gray_concrete
  cyan: cyan_concrete
  purple: purple_concrete
  blue: blue_concrete
  brown: brown_concrete
  green: green_concrete
  red: red_concrete
  black: black_concrete
- white: white_concrete_powder
  orange: orange_concrete_powder
  magenta: magenta_concrete_powder
  light_blue: light_blue_concrete_powder
  yellow: yellow_concrete_powder
  lime: lime_concrete_powder
  pink: pink_concrete_powder
  gray: gray_concrete_powder
  silver: light_gray_concrete_powder
  cyan: cyan_concrete_powder
  purple: purple_concrete_powder
  blue: blue_concrete_powder
  brown: brown_concrete_powder
  green: green_concrete_powder
  red: red_concrete_powder
  black: black_concrete_powder
- white: white_glazed_terracotta
  orange: orange_glazed_terracotta
  magenta: magenta_glazed_terracotta
  light_blue: light_blue_glazed_terracotta
  yellow: yellow_glazed_terracotta
  lime: lime_glazed_terracotta
  pink: pink_glazed_terracotta
  gray: gray_glazed_terracotta
  silver: light_gray_glazed_terracotta
  cyan: cyan_glazed_terracotta
  purple: purple_glazed_terracotta
  blue: blue_glazed_terracotta
  brown: brown_glazed_terracotta
  green: green_glazed_terracotta
  red: red_glazed_terracotta
  black: black_glazed_terracotta
- white: white_terracotta
  orange: orange_terracotta
  magenta: magenta_terracotta
  light_blue: light_blue_terracotta
  yellow: yellow_terracotta
  lime: lime_terracotta
  pink: pink_terracotta
  gray: gray_terracotta
  silver: light_gray_terracotta
  cyan: cyan_terracotta
  purple: purple_terracotta
  blue: blue_terracotta
  brown: brown_terracotta
  green: green_terracotta
  red: red_terracotta
  black: black_terracotta
- white: white_wool
  orange: orange_wool
  magenta: magenta_wool
  light_blue: light_blue_wool
  yellow: yellow_wool
  lime: lime_wool
  pink: pink_wool
  gray: gray_wool
  silver: light_gray_wool
  cyan: cyan_wool
  purple: purple_wool
  blue: blue_wool
  brown: brown_wool
  green: green_wool
  red: red_wool
  black: black_wool
- white: white_carpet
  orange: orange_carpet
  magenta: magenta_carpet
  light_blue: light_blue_carpet
  yellow: yellow_carpet
  lime: lime_carpet
  pink: pink_carpet
  gray: gray_carpet
  silver: light_gray_carpet
  cyan: cyan_carpet
  purple: purple_carpet
  blue: blue_carpet
  brown: brown_carpet
  green: green_carpet
  red: red_carpet
  black: black_carpet
- white: white_stained_glass
  orange: orange_stained_glass
  magenta: magenta_stained_glass
  light_blue: light_blue_stained_glass
  yellow: yellow_stained_glass
  lime: lime_stained_glass
  pink: pink_stained_glass
  gray: gray_stained_glass
  silver: light_gray_stained_glass
  cyan: cyan_stained_glass
  purple: purple_stained_glass
  blue: blue_stained_glass
  brown: brown_stained_glass
  green: green_stained_glass
  red: red_stained_glass
  black: black_stained_glass
- white: white_stained_glass_pane
  orange: orange_stained_glass_pane
  magenta: magenta_stained_glass_pane
  light_blue: light_blue_stained_glass_pane
  yellow: yellow_stained_glass_pane
  lime: lime_stained_glass_pane
  pink: pink_stained_glass_pane
  gray: gray_stained_glass_pane
  silver: light_gray_stained_glass_pane
  cyan: cyan_stained_glass_pane
  purple: purple_stained_glass_pane
  blue: blue_stained_glass_pane
  brown: brown_stained_glass_pane
  green: green_stained_glass_pane
  red: red_stained_glass_pane
  black: black_stained_glass_pane
- white: white_shulker_box
  orange: orange_shulker_box
  magenta: magenta_shulker_box
  light_blue: light_blue_shulker_box
  yellow: yellow_shulker_box
  lime: lime_shulker_box
  pink: pink_shulker_box
  gray: gray_shulker_box
  silver: light_gray_shulker_box
  cyan: cyan_shulker_box
  purple: purple_shulker_box
  blue: blue_shulker_box
  brown: brown_shulker_box
  green: green_shulker_box
  red: red_shulker_box
  black: black_shulker_box
- white: white_bed
  orange: orange_bed
  magenta: magenta_bed
  light_blue: light_blue_bed
  yellow: yellow_bed
  lime: lime_bed
  pink: pink_bed
  gray: gray_bed
  silver: light_gray_bed
  cyan: cyan_bed
  purple: purple_bed
  blue: blue_bed
  brown: brown_bed
  green: green_bed
  red: red_bed
  black: black_bed
# This maps entity_type values to mob egg materials.
mob_eggs:
  bat: monster_egg,bat_spawn_egg
  blaze: monster_egg,blaze_spawn_egg
  cave_spider: monster_egg,cave_spider_spawn_egg
  chicken: monster_egg,chicken_spawn_egg
  cod_mob: monster_egg,cod_mob_spawn_egg
  cow: monster_egg,cow_spawn_egg
  creeper: monster_egg,creeper_spawn_egg
  dolphin: monster_egg,dolphin_spawn_egg
  donkey: monster_egg,donkey_spawn_egg
  drowned: monster_egg,drowned_spawn_egg
  elder_guardian: monster_egg,elder_guardian_spawn_egg
  enderman: monster_egg,enderman_spawn_egg
  endermite: monster_egg,endermite_spawn_egg
  evoker: monster_egg,evocation_illager_spawn_egg
  ghast: monster_egg,ghast_spawn_egg
  guardian: monster_egg,guardian_spawn_egg
  horse: monster_egg,horse_spawn_egg
  husk: monster_egg,husk_spawn_egg
  illusioner: monster_egg,vindication_illager_spawn_egg
  llama: monster_egg,llama_spawn_egg
  magma_cube: monster_egg,magma_cube_spawn_egg
  mooshroom: monster_egg,mooshroom_spawn_egg
  mule: monster_egg,mule_spawn_egg
  ocelot: monster_egg,ocelot_spawn_egg
  parrot: monster_egg,parrot_spawn_egg
  phantom: monster_egg,phantom_spawn_egg
  pig: monster_egg,pig_spawn_egg
  polar_bear: monster_egg,polar_bear_spawn_egg
  puffer_fish: monster_egg,puffer_fish_spawn_egg
  rabbit: monster_egg,rabbit_spawn_egg
  salmon: monster_egg,salmon_mob_spawn_egg
  sheep: monster_egg,sheep_spawn_egg
  shulker: monster_egg,shulker_spawn_egg
  silverfish: monster_egg,silverfish_spawn_egg
  skeleton_horse: monster_egg,skeleton_horse_spawn_egg
  skeleton: monster_egg,skeleton_spawn_egg
  slime: monster_egg,slime_spawn_egg
  spider: monster_egg,spider_spawn_egg
  squid: monster_egg,squid_spawn_egg
  stray: monster_egg,stray_spawn_egg
  tropical_fish: monster_egg,tropical_fish_spawn_egg
  turtle: monster_egg,turtle_spawn_egg
  vex: monster_egg,vex_spawn_egg
  villager: monster_egg,villager_spawn_egg
  vindicator: monster_egg,vindication_illager_spawn_egg
  witch: monster_egg,witch_spawn_egg
  wither_skeleton: monster_egg,wither_skeleton_spawn_egg
  wolf: monster_egg,wolf_spawn_egg
  zombie_horse: monster_egg,zombie_horse_spawn_egg
  zombie_pigman: monster_egg,zombie_pigman_spawn_egg
  zombie: monster_egg,zombie_spawn_egg
  zombie_villager: monster_egg,zombie_villager_spawn_egg
# These are player skins that represent mobs. Some are provided here
# as official Mojang skins, but more can be added.
mob_skins:
  blaze: MHF_Blaze
  cave_spider: MHF_CaveSpider
  chicken: MHF_Chicken
  cow: MHF_Cow
  enderman: MHF_Enderman
  ghast: MHF_Ghast
  iron_golem: MHF_Golem
  magma_cube: MHF_LavaSlime
  mushroom_cow: MHF_MushroomCow
  ocelot: MHF_Ocelot
  pig: MHF_Pig
  pig_zombie: MHF_PigZombie
  sheep: MHF_Sheep
  slime: MHF_Slime
  spider: MHF_Spider
  squid: MHF_Squid
  villager: MHF_Villager
  wolf: MHF_Wolf
  creeper: MHF_Creeper
  zombie: MHF_Zombie
  skeleton: MHF_Skeleton
  guardian: MHF_Guardian
  witch: MHF_Witch
# These define mappings of materials for backwards compatibility
ground_sign_block: sign_post,sign
wall_sign_block: wall_sign
firework: firework,firework_rocket
wall_torch: wall_torch,torch
redstone_torch_on: redstone_torch_on,redstone_torch:1
redstone_torch_off: redstone_torch_on,redstone_torch:0
redstone_wall_torch_on: redstone_torch_on,redstone_wall_torch:4
redstone_wall_torch_off: redstone_torch_on,redstone_torch:0
# This resource pack will automatically be used if none is defined in your server.properties
# Set this to "" if you have some other plugin or Bungee managing resource packs.
resource_pack: "https://s3-us-west-2.amazonaws.com/elmakers/Magic/Magic-RP-7.zip"

# Use this to turn off all resource pack functionality
enable_resource_pack: true

# This will delay sending resource packs to players. This can mitigate issues with the vanilla
# client timing out on connect due to RP processing on potato computers.
# This value is in milliseconds.
# Set this to 0 to set resource packs immediately on join.
resource_pack_delay: 2000

# Set this to true to turn on the player skull-based spell icons
# This may be needed if you have disabled the RP, spell icons are in the RP.
url_icons_enabled: false

# Set this to allow Magic to periodically check for updates to the resource pack.
# Setting this to false is the same as setting resource_pack_check_interval to 0.
enable_resource_pack_check: true

# Set this to zero to turn off periodic RP update checks. The default is every five minutes.
# This is done in a separate thread to avoid interfering with the main server thread.
# Note that this value is in minutes!
resource_pack_check_interval: 5

# Set this to true, and resource packs will not be sent to payers on join, instead they will be prompted
resource_pack_prompt: false
# This defines which Materials make up skulls, used for backwards-compatibility
skulls:
  skeleton:
    wall: skeleton_wall_skull, skull:0
    ground: skeleton_skull, skull:0
    item: skeleton_skull, skull_item:0
  wither_skeleton:
    wall: wither_skeleton_wall_skull, skull:1
    ground: wither_skeleton_skull, skull:1
    item: wither_skeleton_skull, skull_item:1
  zombie:
    wall: zombie_wall_head, skull:2
    ground: zombie_head, skull:2
    item: zombie_head, skull_item:2
  player:
    wall: player_wall_head, skull:3
    ground: player_head, skull:3
    item: player_head, skull_item:3
  creeper:
    wall: creeper_wall_head, skull:4
    ground: creeper_head, skull:4
    item: creeper_head, skull_item:4
  ender_dragon:
    wall: dragon_wall_head, skull:5
    ground: dragon_head, skull:5
    item: dragon_head, skull_item:5
